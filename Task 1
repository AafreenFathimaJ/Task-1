# Import necessary libraries
import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error

# Sample data for demonstration
data = {
    'SquareFootage': [1000, 1500, 2000, 2500, 3000],
    'Bedrooms': [2, 3, 3, 4, 4],
    'Bathrooms': [1, 2, 2.5, 3, 3.5],
    'Price': [150000, 200000, 250000, 300000, 350000]
}

# Creating a DataFrame from the sample data
df = pd.DataFrame(data)

# Splitting the data into features (X) and target (y)
X = df[['SquareFootage', 'Bedrooms', 'Bathrooms']]
y = df['Price']

# Splitting the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Initializing the linear regression model
model = LinearRegression()

# Training the model
model.fit(X_train, y_train)

# Making predictions on the test data
predictions = model.predict(X_test)

# Calculating the mean squared error
mse = mean_squared_error(y_test, predictions)
print("Mean Squared Error:", mse)

# Example prediction for a new house
new_house = np.array([[1800, 3, 2]])  # SquareFootage: 1800, Bedrooms: 3, Bathrooms: 2
predicted_price = model.predict(new_house)
print("Predicted Price for the new house:", predicted_price)
